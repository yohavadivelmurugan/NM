index.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>News Feed Application</title>
  </head>
  <body>=
    <div id="root"></div>
  </body>
</html>
package.json
{
  "name": "news-feed-application",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "react-dom": "^19.2.0",
    "react-scripts": "^5.0.1"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
app.js
import React, { useEffect, useState } from "react";
import NewsCard from "./NewsCard";
import "./index.css";

const API_KEY = "2927a2d19b5b0d4af1f9c91b3e957416";
const URL = `https://gnews.io/api/v4/top-headlines?country=in&lang=en&max=10&token=2927a2d19b5b0d4af1f9c91b3e957416`;
function App() {
  const [articles, setArticles] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchNews = async () => {
      try {
        const response = await fetch(URL);
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const data = await response.json();

        if (data.articles && data.articles.length > 0) {
          setArticles(data.articles);
        } else {
          throw new Error("No articles found. Please try again later.");
        }
      } catch (err) {
        console.error("Error fetching news:", err);
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchNews();
  }, []);

  if (loading) {
    return (
      <div className="app-container">
        <h1 className="title">üì∞ Latest News Feed</h1>
        <p>Loading news...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className="app-container">
        <h1 className="title">üì∞ Latest News Feed</h1>
        <p style={{ color: "red" }}>‚ö†Ô∏è {error}</p>
      </div>
    );
  }

  return (
    <div className="app-container">
      <h1 className="title">üì∞ Latest News Feed</h1>
      <div className="news-grid">
        {articles.map((item, index) => (
          <NewsCard key={index} article={item} />
        ))}
      </div>
    </div>
  );
}

export default App;
NewsCard.js
import React from "react";

function NewsCard({ article }) {
  return (
    <div className="news-card">
      {article.urlToImage && (
        <img src={article.urlToImage} alt={article.title} className="news-img" />
      )}
      <div className="news-content">
        <h3>{article.title}</h3>
        <p>{article.description}</p>
        <a href={article.url} target="_blank" rel="noopener noreferrer">
          Read More ‚Üí
        </a>
      </div>
    </div>
  );
}

export default NewsCard;
index.css
body {
  margin: 0;
  font-family: "Poppins", sans-serif;
  background-color: #f4f4f9;
  color: #333;
}

.app-container {
  text-align: center;
  padding: 20px;
}

.title {
  color: #0056b3;
  margin-bottom: 20px;
}

.news-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
  padding: 10px;
}

.news-card {
  background: #fff;
  border-radius: 10px;
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  transition: transform 0.3s;
}

.news-card:hover {
  transform: scale(1.02);
}

.news-img {
  width: 100%;
  height: 180px;
  object-fit: cover;
}

.news-content {
  padding: 15px;
}

.news-content a {
  color: #007bff;
  text-decoration: none;
  font-weight: 600;
}

.news-content a:hover {
  text-decoration: underline;
}
index.js
import React from "react";
import ReactDOM from "react-dom/client";
import App from "./app";
import "./index.css"; // optional, if you have this file

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
